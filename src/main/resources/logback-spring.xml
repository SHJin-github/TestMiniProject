<?xml version="1.0" encoding="UTF-8"?>
<!-- 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 -->
<configuration scan="true" scanPeriod="60 seconds">

<!--
Default logback configuration provided for import
-->

    <!-- # variable -->
    <!-- log file path -->
    <property name="LOG_PATH" value="C:/logs/local"/>
    <!-- log file name -->
    <property name="LOG_FILE_NAME" value="local_log"/>
    <!-- err log file name -->
    <property name="ERR_LOG_FILE_NAME" value="local_err_log"/>
    <!--
		# pattern option
			- %logger{length} 						: logger name을 표시하는데 %logger(10)이면 10글자 알아서 축약해서 보여줌 ex) lims.req.service.Impl.RequestMServiceImpl
			- %thread 								: thread name print
			- %-5level 								: log level print -5는 고정 출력폭임 ex) [debug ], [trace] debug4글자 + 빈칸1 추가됨
			- %msg 									: log message
			- %n 									: new line (줄바꿈)
			- ${PID:-} 								: process id(PID) print
			- %d 									: log time print ex) %d{YYYY-MM-dd HH:mm:ss} -> 2021-03-26 12:30:11
			- %p 									: logging level. 위에 %level이랑 똑같음
			- %F 									: 로깅이 발생한 프로그램 파일명
			- %M 									: 로깅일 발생한 메소드의 이름
			- %l 									: 로깅이 발생한 호출지의 정보
			- %L 									: 로깅이 발생한 호출지의 라인 수
			- %t 									: thread name print
			- %c 									: 로깅이 발생한 카테고리
			- %C 									: Class name print
			- %m 									: 로그 메시지
			- %r 									: 애플리케이션 시작 이후부터 로깅이 발생한 시점까지의 시간
	 -->
    <property name="LOG_PATTERN" value="[%-5level] [%d{yy-MM-dd HH:mm:ss}] [%thread] [%logger{50}:%line] - %msg%n"/>

    <!-- Console 설정 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- File Appender -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>

        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 -->
            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            <!-- 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 필터 사용 예제 -->
    <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>error</level>
            <onMatch>ACCEPT</onMatch>  <!-- # 일치시 승인  -->
            <onMismatch>DENY</onMismatch> <!-- #불일치시 거절 -->
        </filter>

        <file>${LOG_PATH}/error/${ERR_LOG_FILE_NAME}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <!-- Rolling 정책 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/error/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxFileSize>50MB</maxFileSize>
            <MinIndex>1</MinIndex>
            <MaxIndex>10</MaxIndex>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>


    <!--
        #log level
            TRACE < DEBUG < INFO < WARN < ERROR
    -->
    <!-- root레벨 설정 -->
    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
        <appender-ref ref="Error"/>
    </root>


</configuration>